{"version":3,"sources":["actions/auth.js","API.js","actions/post_actions.js","components/Featured.js","components/Login.js","components/Signup.js","components/Comment.js","components/Like.js","actions/post_to_edit.actions.js","components/EditPostForm.js","actions/comment_actions.js","actions/like_actions.js","components/Post.js","components/Navbar.js","components/NewPostForm.js","actions/saved_actions.js","actions/user_actions.js","components/PostContainer.js","components/Profile.js","components/Saved.js","App.js","reducers/root_reducer.js","reducers/post_reducer.js","reducers/auth_reducer.js","reducers/like_reducer.js","reducers/saved_reducer.js","reducers/comment_reducer.js","reducers/post_to_edit_reducer.js","reducers/user_reducer.js","index.js"],"names":["currentUser","user","type","API","POST_URL","Featured","this","props","featuredPosts","Item","photo_url","item","image","width","src","alt","caption","style","fontFamily","location","display","justifyContent","alignItems","padding","posts","map","i","Component","connect","state","dispatch","fetch","then","res","json","sort","postA","postB","likes","slice","Login","username","password","error","handleChange","event","setState","target","name","value","login","preventDefault","reqObj","method","headers","body","JSON","stringify","resp","data","login_success","localStorage","setItem","token","history","push","justifyItems","color","flexWrap","border","backgroundColor","onSubmit","onChange","placeholder","margin","to","textDecoration","mapDispatchToProps","Signup","signup","signup_success","className","marginTop","Comment","comments","comment","index","listStyle","content","Like","length","EditPostForm","handleSubmit","updatePost","revert","showEditForm","prevProps","prevState","post_to_edit","align","formObj","getState","FormData","Object","keys","forEach","key","append","id","updatedPost","post","COMMENT_URL","LIKES_URL","Post","addComment","user_id","auth","post_id","handleEdit","postToEdit","fetchLikes","fetchComments","pathname","fontWeight","Button","float","compact","onClick","addLikes","Icon","addToSaved","deletePost","maxHeight","filter","like","height","overflow","postId","withRouter","Navbar","search","searchPosts","backHome","ref","contextRef","Sticky","context","Menu","attached","paddingTop","position","Input","onKeyDown","Dropdown","showProfile","showFeed","showSaved","showPostForm","logout","params","toLowerCase","includes","NewPostForm","new_post_success","onDrop","bind","pictureFiles","pictureDataURLs","withIcon","buttonText","imgExtension","maxFileSize","newPost","SAVED_URL","USER_URL","PostContainer","showForm","removeItem","logoutUser","heading","window","href","split","getItem","Authorization","userPosts","savedPosts","fetchPosts","findUser","textAlign","saved","saveds","some","users","find","Profile","App","exact","path","component","Saved","combineReducers","action","Math","random","p","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c514fbbc.chunk.js","sourcesContent":["export const login_success = (user) => {\n        return ({\n        type: 'LOGIN_SUCCESS',\n        user\n    })\n}\n\nexport const currentUser = (user) => {\n    return ({\n        type: 'CURRENT_USER',\n        user\n    })\n}\n\n\nexport const logoutUser = () => {\n    return {\n      type: 'LOGOUT_USER'\n    }\n  }\n\nexport const signup_success = (user) => {\n    return ({\n        type: 'SIGNUP_SUCCESS',\n        user\n    })\n}","// const API = 'http://shielded-harbor-32849.herokuapp.com'\nconst API = 'http://localhost:3000'\n\nexport default API;","import API from '../API.js'\n\nconst POST_URL = `${API}/posts`\n\nexport const fetchPosts = () => dispatch => {\n    fetch(POST_URL)\n    .then(res => res.json())\n    .then(posts => \n        dispatch({\n        type: 'FETCH_POSTS',\n        posts\n    })\n    )\n}\n\nexport const new_post_success = (formObj) => dispatch => {\n\n  const data = new FormData()\n        Object.keys(formObj).forEach((key, value) => {\n        data.append(key, formObj[key])\n        })\n\n    const reqObj = {\n        method: 'POST',\n        body: data\n      }\n  \n      fetch(POST_URL, reqObj)\n      .then(res => res.json())\n      .then( newPost => \n        dispatch({\n        type: 'NEW_POST_SUCCESS',\n        newPost\n      })\n      )\n}\n\nexport const updatePost = (formObj) => (dispatch, getState) => {\n\n  const data = new FormData()\n  Object.keys(formObj).forEach((key, value) => {\n    data.append(key, formObj[key])\n  })\n\n  const reqObj = {\n      method: 'PATCH',\n      body: data\n    }\n\n    fetch(`${POST_URL}/${getState().post_to_edit.id}`, reqObj)\n    .then(resp => resp.json()) \n    .then(updatedPost => \n      dispatch({\n      type: 'UPDATED_POST',\n      updatedPost\n    })\n    )\n}\n\nexport const userPosts = () => (dispatch, getState) => {\n  //filter posts published by current user\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n      dispatch({\n      type: 'USER_POSTS',\n      posts: posts.filter(post => post.user.id === getState().auth.user.id)\n  })\n  )\n}\n\nexport const deletePost = (postId) => dispatch => {\n\n  fetch(`${POST_URL}/${postId}`, {method: 'DELETE'})\n  .then(res => res.json())\n  .then(post => \n        dispatch({\n      type: 'DELETE_POST',\n      post: post\n  })\n  )\n}\n\nexport const searchPosts = (params) => dispatch => {\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n    dispatch({\n      type: 'SEARCH',\n      posts: posts.filter(post => \n        post.location.toLowerCase().includes(params.toLowerCase()) || post.caption.toLowerCase().includes(params.toLowerCase()))\n    })\n  )\n}\n\nexport const savedPosts = () => (dispatch, getState) => {\n  // filter posts saved by current user\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n    dispatch({\n      type: 'SAVED_POSTS',\n      posts: posts.filter(post => post.saveds.some(saved => saved.user_id === getState().auth.user.id))\n    })\n  )\n}\n\nexport const featuredPosts = () => (dispatch) => {\n  //sort most likes and limit 5\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n      dispatch({\n      type: 'FEATURED',\n      posts: posts.sort(function(postA, postB) {return postA.likes - postB.likes}).slice(0, 5)\n  })\n  )\n}","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Carousel from 'react-material-ui-carousel'\nimport {Card} from 'rebass'\nimport {featuredPosts} from '../actions/post_actions'\nimport API from '../API.js'\n\n\nclass Featured extends Component {\n\n    componentDidMount () {\n        //get the top five posts from post actions\n        this.props.featuredPosts()\n    }\n\n    render() {\n\n            function Item (props)\n                {\n                    const photo_url = `${API}${props.item.image}`\n\n                    return (\n        \n                        <Card>\n                            <img width={500} src={photo_url} alt={props.item.caption}/><br/>\n                            <h2 style={{fontFamily:'Playfair'}}>{props.item.location}</h2>\n                        </Card>\n                    \n                    )\n                }\n\n        return (\n            <div style={{display:'flex', justifyContent:'center', alignItems:'center', padding:\"20px\"}}>\n             <Carousel >\n            {\n                this.props.posts.map( (item, i) => <Item key={i} item={item} /> )\n            }\n            </Carousel>\n            </div>\n        )\n    }\n} \n\nconst mapStateToProps = state => ({\n    posts: state.posts\n})\n\nexport default connect( mapStateToProps, {featuredPosts} )((Featured))\n","import React, { Component } from 'react'\nimport {login_success} from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport Featured from './Featured'\nimport { Button } from 'rebass'\nimport { Flex, Box } from 'reflexbox'\nimport API from '../API.js'\n\nclass Login extends Component {\n\n    state = {\n        username: '', \n        password: '',\n        error: null\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    login = event => {\n        event.preventDefault()\n        const reqObj = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n          }\n      \n          fetch(`${API}/auth`, reqObj)\n          .then(resp => resp.json())\n          .then(data => {\n            if (data.error) {\n              this.setState({\n                error: data.error\n              })\n            } else {\n              //pass the user credentials to post action\n              this.props.login_success(data)\n              // set the local storage to contain JWT\n              localStorage.setItem('my_app_token', data.token)\n              // redirect user to home page after login\n              this.props.history.push('/home')\n            }\n          })\n    }\n\n    render() {\n\n        return (\n\n           <div style={{justifyContent:'center', justifyItems:'center'}}>\n              <h1 style={{fontFamily: 'Major Mono Display, monospace'}} >Wide Wide World</h1> \n              \n                  {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n                  \n                  <Flex flexWrap='wrap' justifyContent='center'>\n                  \n                  <Box  width={1} style={{border:'1px solid black', backgroundColor:'#ffbb33', display:'flex', justifyContent:'center', justifyItems:'center'}}>\n                      <form onSubmit={this.login}>\n                      \n                        <h2 style={{justifyContent: 'center', fontFamily:'Playfair'}}>Share and Explore</h2><br/>\n                          \n                          <input style={{padding:5}} onChange={this.handleChange} name='username' type='text' placeholder=\"Username\" value={this.state.username}/><br/><br/>\n                          <input style={{padding:5}} onChange={this.handleChange} name='password' type='password' placeholder=\"Password\" value={this.state.password}/><br/><br/>\n                          \n                          <Button style={{padding:10, margin:10, color:'black'}} type='submit'>Enter</Button>\n\n                          <Link to=\"/signup\" style={{fontFamily: 'Playfair', textDecoration: 'underline', color:'black'}}>Create Account</Link>\n                      \n                      </form>\n                  </Box>\n                  \n                  <Featured/>\n                \n                </Flex>                \n          </div>\n\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    login_success\n}\n\nexport default connect(null, mapDispatchToProps)(Login)","import React, { Component } from 'react'\nimport {signup_success} from '../actions/auth';\nimport { connect } from 'react-redux';\nimport { Flex, Box } from 'reflexbox'\nimport {Button} from 'rebass'\nimport '../App.css'\nimport API from '../API.js'\n\nclass Signup extends Component {\n\n    state = {\n        username: '', \n        password: '',\n        error: null\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    signup = event => {\n        event.preventDefault()\n        //create a new user with password\n        const reqObj = {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.state)\n          }\n      \n          fetch(`${API}/users`, reqObj)\n          .then(resp => resp.json())\n          .then(data => {\n            if (data.error) {\n              this.setState({\n                error: data.error\n              })\n            } else {\n              //pass the user info to post action\n              this.props.signup_success(data)\n              //set the JWT\n              localStorage.setItem('my_app_token', data.token)\n              //redirect to home page once log in successful\n              this.props.history.push('/home')\n            }\n          })\n    }\n\n    render() {\n\n        return (\n        <div className='sign-up'>\n\n        <div style={{display:'flex', justifyContent:'center', justifyItems:'center'}}>\n        {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n        <Flex flexWrap='wrap'>\n            <Box style={{marginTop:'30vh', border:'1px solid black', backgroundColor:'#ffbb33', padding:'20px'}}>\n            \n                <form onSubmit={this.signup} style={{justifyContent:'center', justifyItems:'center'}}>\n                  <h2 style={{fontFamily:'Playfair'}}>Adventure Awaits...</h2><br/>\n                    <input style={{padding:5}} onChange={this.handleChange} name='username' type='text' placeholder=\"Username\" value={this.state.username}/><br/>\n                    <input style={{padding:5}} onChange={this.handleChange} name='password' type='password' placeholder=\"Password\" value={this.state.password}/><br/>\n                  <Button style={{padding:10, margin:10, color:'black'}} type='submit'>Sign Up</Button>\n                </form>\n            </Box>\n          </Flex>\n          </div>\n\n          </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = {\n    signup_success\n}\n\nexport default connect(null, mapDispatchToProps)(Signup)","import React from 'react'\n\nexport default function Comment({comments}) {\n\n    return (\n        <>\n        {/* display comments as list */}\n            {comments.map((comment, index) => \n            <li key={index} style={{listStyle:'none'}}>\n                {comment.content}<hr></hr>\n            </li>\n            )}\n        </>\n    )\n}","import React from 'react'\n\nexport default function Like ({likes}) {\n\n    return (\n        <div>\n            {/* display number of likes to update dynamically */}\n            <span> {likes.length} likes </span>\n        </div>\n    )\n}","import API from '../API.js'\n\nconst POST_URL = `${API}/posts`\n\nexport const postToEdit = (post) => dispatch => {\n\n    fetch(`${POST_URL}/${post.id}`)\n    .then(res => res.json())\n    .then(post  => \n        dispatch({\n        type: 'POST_TO_EDIT',\n        post\n    })\n    )\n}\n\nexport const revert = (post) => {\n    return {type: 'REVERT', post}\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {updatePost} from '../actions/post_actions'\nimport {revert} from '../actions/post_to_edit.actions'\nimport { Box, Button } from 'rebass'\n\nclass EditPostForm extends Component {\n \n    constructor(props){\n    super(props)\n        this.state = {\n        location: '',\n        caption: ''\n        }\n    }\n\n\n    componentDidUpdate(prevProps, prevState){\n        // populate edit form with post_to_edit info from redux store\n        if (this.props.post_to_edit && prevState.location === '') {\n            this.setState({\n                location: this.props.post_to_edit.location,\n                caption: this.props.post_to_edit.caption\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        //update state on input\n       this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        //pass state to post actions to update\n        this.props.updatePost(this.state)\n        this.props.revert(this.state)\n        this.setState({\n            location: '',\n            caption: ''\n        })\n        this.props.showEditForm()\n    }\n\n    render() {\n        return (\n                <div style={{padding:50, align: 'center'}}>\n                    <Box style={{display:'flex', justifyContent:'center', justifyItems:'center'}}>\n                    <form onSubmit={this.handleSubmit}>\n                        Location: <input style={{padding:5}} onChange={this.handleChange} name='location' type='text' placeholder=\"Location\" value={this.state.location}/><br/>\n                        Caption: <input style={{padding:5}} onChange={this.handleChange} name='caption' type='text' placeholder=\"Caption\" value={this.state.caption}/><br/>\n                        <Button style={{padding:10, margin:10, color:'black'}} type='submit'>Save</Button>\n                    </form>\n                    </Box>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n  post_to_edit: state.post_to_edit\n})\n\nexport default connect(mapStateToProps, {updatePost, revert})(EditPostForm)","import API from '../API.js'\n\nconst COMMENT_URL = `${API}/comments`\n\nexport const fetchComments = () => dispatch => {\n  fetch(COMMENT_URL)\n  .then(res => res.json())\n  .then(comments => \n    dispatch({\n    type: 'FETCH_COMMENTS',\n    comments: comments\n  })\n  )\n}\n\nexport const addComment = (comment) =>  dispatch => {\n\n    const reqObj = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      }, \n      body: JSON.stringify(comment)\n      }\n      fetch(COMMENT_URL, reqObj)\n      .then(res => res.json())\n      .then(comment => \n        dispatch({\n        type: 'ADD_COMMENT',\n        comment\n      })\n      )\n  }","import API from '../API.js'\n\nconst LIKES_URL = `${API}/likes`\n\nexport const fetchLikes = () => dispatch => {\n  fetch(LIKES_URL)\n  .then(res => res.json())\n  .then(likes => \n    dispatch({\n    type: 'FETCH_LIKES',\n    likes: likes\n  })\n  )\n}\n\n\nexport const addLikes = (post) =>  dispatch => {\n\n    const like = {\n      user_id: post.user.id,\n      post_id: post.id\n    }\n  \n    const reqObj = {\n      method: 'POST',\n      headers:{\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(like)\n      }\n\n      fetch(LIKES_URL, reqObj)\n      .then(res => res.json())\n      .then(like => \n        dispatch({\n        type: 'ADD_LIKE',\n        like: like\n      })\n      )\n  }","import {Component} from 'react'\nimport Comment from './Comment'\nimport Like from './Like'\nimport EditPostForm from './EditPostForm'\nimport API from '../API.js'\nimport '../App.css'\n\nimport {connect} from 'react-redux'\nimport {deletePost} from '../actions/post_actions'\nimport {addComment} from '../actions/comment_actions'\nimport {withRouter} from 'react-router-dom'\nimport {fetchLikes} from '../actions/like_actions'\nimport {fetchComments} from '../actions/comment_actions'\nimport {postToEdit} from '../actions/post_to_edit.actions'\n\nimport { Button, Icon } from 'semantic-ui-react'\nimport {Box, Text} from 'rebass'\n\n\nclass Post extends Component {\n\n    state = {\n        content: '',\n        showEditForm : false\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    addComment = event => {\n        event.preventDefault()\n        const comment = {\n            user_id: this.props.auth.user.id,\n            post_id:  this.props.post.id,\n            content: this.state.content\n        }\n        this.props.addComment(comment)\n        this.setState({\n            content: ''\n        })\n    }\n\n    handleEdit = (post) => {\n        this.showEditForm()\n        this.props.postToEdit(post)\n    }\n\n    showEditForm = () => {\n        //toggle display edit form on click\n        { this.state.showEditForm === false ? \n          this.setState({\n            showEditForm : true\n        })\n        : this.setState({\n            showEditForm : false\n        })\n        }\n      }\n\n    componentDidMount () {\n        //get all likes and comments by individual posts\n        this.props.fetchLikes()\n        this.props.fetchComments()\n    }\n\n\n    render(){\n        \n        const photo_url = `${API}${this.props.post.image}`\n\n        //user.likes are likes that have been given to a user's posts so likes.post_id are the post.id of this user's posts\n        //post.likes contains user_id for the creator of the post - not the person that liked it and post_id is post.id\n        //I believe Like model in db needs to take in the current user's id as params to access here\n\n        // console.log(this.props.user.likes.map(like => like.post_id).includes(this.props.post.id))\n\n    return (\n        <>\n        <Box style={{border:'solid lightGrey 1px', padding:'20px', margin:'20px'}}>\n            {/* conditional rendering for displaying username and buttons for each post based on window location */}\n            {this.props.location.pathname === '/home' || this.props.location.pathname === '/saved' ?\n            <div >\n                <Text style={{fontWeight:'bold'}}>{this.props.post.user ? this.props.post.user.username : this.props.auth.user.username}\n                {/* add conditional rendering to liked and saved buttons to change when user has liked or saved post */}\n                    <Button style={{float:'right'}} compact onClick={() => this.props.addLikes(this.props.post)}><Icon name='heart outline'/></Button>\n                    <Button style={{float:'right'}} compact onClick={()=> this.props.addToSaved(this.props.post)}><Icon name='bookmark outline'/></Button>\n                </Text>\n            </div>\n            \n                 :\n            <div>\n                <Button style={{float:'right'}} compact onClick={() => this.props.deletePost(this.props.post.id)}>delete</Button>\n                <Button style={{float:'right'}} compact onClick={() => this.handleEdit(this.props.post)}>edit</Button>\n            </div> \n            }\n            \n            <img width={300} maxHeight={600} src={photo_url} alt={this.props.post.caption}/><br/> \n\n            {this.state.showEditForm === true ? \n                <EditPostForm showEditForm={this.showEditForm}/>\n                : null}\n            \n            <span>{this.props.post.caption}</span><br/>\n            \n            <span style={{fontFamily:'Playfair'}}>{this.props.post.location}</span>\n            \n            <span> <Like key={this.props.post.id} \n                    likes={this.props.likes.filter(like => like.post_id === this.props.post.id)}/> \n            </span>\n            \n            <form style={{display:'flex', justifyContent:'center', alignItems:'center', padding:'15px'}} onSubmit={this.addComment}>\n                <input style={{padding:'5px'}} onChange={this.handleChange} type='text' name='content' value={this.state.content} />    \n                <Button compact type='submit'>comment</Button>\n            </form>\n\n            <div style={{justifyContent:'center', height: '110px', width:\"350px\", overflow: 'auto'}}>\n               <Comment key={this.props.post.id} \n               comments={this.props.comments.filter(comments => comments.post_id === this.props.post.id)} />\n            </div>\n        </Box>\n    </>\n    )\n}\n\n}\n\nconst mapStateToProps = state => ({\n    comments: state.comments,\n    likes: state.likes,\n    auth: state.auth,\n    user: state.user\n})\n\nexport default connect(mapStateToProps, {addComment, fetchLikes, fetchComments, deletePost, postToEdit})(withRouter(Post))","import React, { Component } from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {Dropdown, Input, Menu, Sticky} from 'semantic-ui-react'\nimport {searchPosts} from '../actions/post_actions'\n\nclass Navbar extends Component {\n\n    state = {\n        search: ''\n    }\n\n    handleChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    search = event => {\n        if (event.key === 'Enter'){\n            //pass the search input to post action\n        this.props.searchPosts(event.target.value)}\n    }\n\n    backHome = () => {\n        this.props.history.push('/home')\n    }\n\n    render() {\n\n        return (\n            <div ref={this.contextRef}>\n            <Sticky context={this.contextRef}>                 \n                <Menu \n                attached='top'\n                style={{ backgroundColor:'#ffbb33', paddingTop: '1em', fontFamily:'Playfair'}}>\n                    <Menu.Item position=\"left\" onClick={this.backHome}> <h2 style={{fontFamily: 'Major Mono Display, monospace'}}>Wide Wide World</h2> </Menu.Item>\n                    <Menu.Item position=\"right\">\n                        <Input onKeyDown={this.search} onChange={this.handleChange} name='search' placeholder='Search...' value={this.state.search}/>\n                    </Menu.Item>\n                    <Dropdown.Menu>\n                    {/* conditional rendering of appropriate menu options based on window location */}\n                    {this.props.location.pathname === '/home' ?\n                        <Dropdown.Item onClick={this.props.showProfile}>My Posts</Dropdown.Item>\n                        :<><Dropdown.Item onClick={this.props.showFeed}>Back to Feed</Dropdown.Item>\n                    {this.props.location.pathname === '/saved' ? \n                        <Dropdown.Item onClick={this.props.showProfile}>My Posts</Dropdown.Item>\n                        :<Dropdown.Item onClick={this.props.showSaved}>Show Saved</Dropdown.Item>}\n                        </>}\n                        <Dropdown.Item onClick={this.props.showPostForm}>New Post</Dropdown.Item>\n                        <Dropdown.Item onClick={this.props.logout}>Log Out</Dropdown.Item>\n                    </Dropdown.Menu>\n                </Menu>\n            </Sticky>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {searchPosts})(withRouter(Navbar))","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {new_post_success} from '../actions/post_actions';\nimport ImageUploader from \"react-images-upload\";\nimport { Box, Button } from 'rebass'\n\nclass NewPostForm extends Component {\n\n    constructor(props){\n    super(props)\n    this.state = {\n        user: this.props.auth.user,\n        user_id: this.props.auth.user.id,\n        image: '',\n        location: '',\n        caption: ''\n    }\n    this.onDrop = this.onDrop.bind(this)\n    }\n\n    onDrop(pictureFiles, pictureDataURLs) {\n        this.setState({\n          image: pictureFiles[0]\n        }); \n      }\n    \n\n    handleChange = (event) => {\n        {this.setState({\n            [event.target.name]: event.target.value\n        })}\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        //pass state to post action to create new post\n        this.props.new_post_success(this.state)\n        this.setState({\n            image: '',\n            location: '',\n            caption: ''\n        })\n        //toggle showing form\n        this.props.showPostForm()\n    }\n\n    render() {\n\n        return (\n            <div>\n                {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\n                <Box style={{border:'1px solid black', display:'flex', justifyContent:'center', justifyItems:'center'}}>\n                    <form onSubmit={this.handleSubmit}>\n                    <ImageUploader\n                            withIcon={true}\n                            buttonText=\"Choose images\"\n                            onChange={this.onDrop}\n                            imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\", \".jpeg\"]}\n                            maxFileSize={5242880}\n                        />\n                        <input style={{padding:5}} onChange={this.handleChange} name='location' type='text' placeholder=\"Location\" value={this.state.location}/><br/>\n                        <input style={{padding:5}} onChange={this.handleChange} name='caption' type='text' placeholder=\"Caption\" value={this.state.caption}/><br/>\n                        <Button style={{padding:10, margin:10, color:'black'}} type='submit'>Submit!</Button>\n                    </form>\n                </Box>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {new_post_success})(NewPostForm)\n","import API from '../API.js'\n\nconst SAVED_URL = `${API}/saveds`\n\nexport const addToSaved = (post) =>  dispatch => {\n  \n    const saved = {\n      user_id: post.user.id,\n      post_id: post.id}\n  \n    const reqObj = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      }, \n      body: JSON.stringify(saved)\n      }\n      fetch(SAVED_URL, reqObj)\n      .then(res => res.json())\n      .then(saved => \n        dispatch({\n        type: 'ADD_TO_SAVED',\n        saved\n      })\n      )\n  }","import API from '../API.js'\n\nconst USER_URL = `${API}/users`\n\nexport const findUser = () => (dispatch, getState) => {\n    //get all currennt user information including posts, likes, saveds\n    fetch(USER_URL)\n    .then(res => res.json())\n    .then(users => \n        dispatch({\n        type: 'USER',\n        user: users.find(user => user.id === getState().auth.user.id)\n    })\n    )\n}","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nimport Post from './Post'\nimport Navbar from './Navbar'\nimport NewPostForm from './NewPostForm'\nimport API from '../API.js'\nimport '../App.css'\n\n\nimport {fetchPosts, userPosts, savedPosts} from '../actions/post_actions'\nimport {addLikes} from '../actions/like_actions'\nimport {addToSaved} from '../actions/saved_actions'\nimport {currentUser, logoutUser} from '../actions/auth'\nimport {findUser} from '../actions/user_actions'\nimport {withRouter} from 'react-router-dom'\nimport {Flex} from 'rebass'\n\nclass PostContainer extends Component {\n\n    state = {\n        showForm : false\n    }\n\n    componentDidMount(){\n\n        const token = localStorage.getItem('my_app_token')\n    \n        //if no JWT redirected back to login page\n        if (!token) {\n          this.props.history.push('/')\n        } else {\n        //retrieve the token and current user information\n          const reqObj = {\n            method: 'GET',\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n    \n          fetch(`${API}/current_user`, reqObj)\n          .then(resp => resp.json())\n          .then(data => {\n            this.props.currentUser(data)\n          })\n\n          //make fetch request based on window location\n          if (window.location.href.split('/')[3] === 'profile') { \n            this.props.userPosts()}\n          else if (window.location.href.split('/')[3] === 'saved') {\n            this.props.savedPosts()}\n          else\n            {this.props.fetchPosts()\n              this.props.findUser()}\n          \n        }\n      \n       \n      }\n\n      logout = () => {\n        localStorage.removeItem('my_app_token')\n        this.props.logoutUser()\n        //redirect to login page after toekn removed\n        this.props.history.push('/')\n    }\n\n\n    showPostForm = () => {\n      //toggle showing new post form on click\n      { this.state.showForm === false ? \n        this.setState({\n          showForm : true\n      })\n      : this.setState({\n          showForm : false\n      })\n      }\n    }\n\n    showProfile = () => {\n        this.props.history.push('/profile')\n    }\n\n    showFeed = () => {\n        this.props.history.push('/home')\n    }\n\n    showSaved = () => {\n        this.props.history.push('/saved')\n    }\n\n    heading = () => {\n      //conditional rendering for heading\n      if (window.location.href.split('/')[3] === 'home') { \n      return <span>“NOT ALL THOSE WHO WANDER ARE LOST” ~ J.R.R. TOLKIEN</span>}\n    }\n\n    render() {\n\n        return (\n          <>\n          \n            <div>\n                <Navbar logout={this.logout} \n                        showPostForm={this.showPostForm}  \n                        showProfile={this.showProfile} \n                        showSaved={this.showSaved} \n                        showFeed={this.showFeed}/>\n                \n                {this.state.showForm === true ? \n                //render new post form if 'new post' has been clicked\n                <NewPostForm showPostForm={this.showPostForm}/>\n                : null}\n                </div>\n            \n                <div style={{margin:'30px', textAlign:'center'}}>{this.heading()}</div>\n\n                <div className='masonry' justifyContent='center' justifyItems='center'>\n                    {this.props.posts.map (post =>\n                          <Post key={post.id}  \n                                post={post} \n                                user={post.user} \n                                addLikes={this.props.addLikes} \n                                addToSaved={this.props.addToSaved}/>\n                      )}\n              </div>\n              </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {addToSaved, addLikes, fetchPosts, userPosts, currentUser, logoutUser, savedPosts, findUser})(withRouter(PostContainer))","import React, { Component } from 'react'\nimport PostContainer from './PostContainer'\n\nexport default class Profile extends Component {\n    render() {\n        return (\n            <div>\n                <PostContainer />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport PostContainer from './PostContainer'\n\nexport default class Profile extends Component {\n    render() {\n        return (\n            <div>\n                <PostContainer />\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter} from 'react-router-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { currentUser } from './actions/auth'\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport PostContainer from './components/PostContainer';\nimport Profile from './components/Profile';\nimport Saved from './components/Saved';\nimport { connect } from 'react-redux'\nimport './App.css'\n\n\n\nclass App extends Component {\n\n  componentDidMount(){\n    const token = localStorage.getItem('my_app_token')\n\n    if (!token) {\n      this.props.history.push('/')\n    } else {\n\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n\n      fetch('http://localhost:3000/current_user', reqObj)\n      .then(resp => resp.json())\n      .then(data => {\n        this.props.currentUser(data)\n      })\n    }\n  }\n\n  render(){\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n        <Route exact path='/' component={Login}/>\n        <Route exact path='/signup' component={Signup}/>\n        <Route exact path='/home' component={PostContainer}/>\n        <Route exact path='/profile' component={Profile}/>\n        <Route exact path='/saved' component={Saved}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n  }\n}\n\nexport default connect(null, {currentUser})(withRouter(App))\n","import { combineReducers } from 'redux'\nimport post_reducer from './post_reducer'\nimport auth_reducer from './auth_reducer'\nimport like_reducer from './like_reducer'\nimport saved_reducer from './saved_reducer'\nimport comment_reducer from './comment_reducer'\nimport post_to_edit_reducer from './post_to_edit_reducer'\nimport user_reducer from './user_reducer'\n\nexport default combineReducers({\n    posts: post_reducer,\n    auth: auth_reducer,\n    likes: like_reducer,\n    saved: saved_reducer,\n    comments: comment_reducer,\n    post_to_edit: post_to_edit_reducer, \n    user: user_reducer\n})","export default function postReducer(state= [], action) {\n \nlet updatedPosts\nlet shuffledPosts\n    switch (action.type) {\n        case \"FETCH_POSTS\":\n            shuffledPosts = action.posts.sort( () => Math.random() - 0.5)\n          return shuffledPosts\n        case 'USER_POSTS':\n            return action.posts\n        case 'DELETE_POST':\n            updatedPosts = state.filter(p => p.id !== action.post.id)\n            return updatedPosts\n        case 'SEARCH':\n            return action.posts\n        case 'SAVED_POSTS':\n            return action.posts\n        case 'NEW_POST_SUCCESS':\n            return [...state, action.newPost]\n        case 'UPDATED_POST':\n            updatedPosts = state.map(post => {\n                if(post.id === action.updatedPost.id){\n                  return action.updatedPost\n                }\n                else{\n                  return post\n                }\n              })\n              return updatedPosts\n        case 'FEATURED':\n            return action.posts\n        default:\n             return state\n    }\n}","export default function authReducer(state=null, action) {\n    switch(action.type){\n        case 'LOGIN_SUCCESS':\n            return action.user\n        case 'CURRENT_USER':\n            return action.user\n        case 'LOGOUT_USER':\n            return null\n        case 'SIGNUP_SUCCESS':\n            return action.user\n        default:\n            return state\n    }\n}","export default function likeReducer(state= [], action) {\n    switch (action.type) {\n        case 'FETCH_LIKES':\n            return action.likes\n        case 'ADD_LIKE':\n            return [...state, action.like]\n        default:\n              return state\n    }\n}","export default function savedReducer(state= [], action) {\n    switch (action.type) {\n        case 'ADD_TO_SAVED':\n            return action.saved\n        default:\n              return state\n    }\n}","export default function commentReducer(state= [], action) {\n    switch (action.type) {\n        case 'FETCH_COMMENTS':\n            return action.comments\n        case 'ADD_COMMENT':\n            return [...state, action.comment]\n        default:\n              return state\n    }\n}","export default function postToEditReducer(state= null, action) {\n    \n        switch (action.type) {\n            case \"POST_TO_EDIT\":\n              return action.post\n            case 'REVERT':\n              return null\n            default:\n                 return state\n        }\n    }","//for future updates, not currently using\n\nexport default function userReducer(state=null, action) {\n    switch(action.type){\n        case 'USER':\n            return action.user\n        default : \n        return state }\n    }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers/root_reducer'\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport 'semantic-ui-css/semantic.min.css'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}