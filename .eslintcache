[{"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Post.js":"1","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/PostContainer.js":"2","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/post_actions.js":"3","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Navbar.js":"4","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/post_reducer.js":"5","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Like.js":"6","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/like_actions.js":"7","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/like_reducer.js":"8","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/root_reducer.js":"9","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Comment.js":"10","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/comment_actions.js":"11","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/comment_reducer.js":"12","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/NewPostForm.js":"13","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/App.js":"14","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Login.js":"15","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/EditPostForm.js":"16","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/post_to_edit_reducer.js":"17","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/post_to_edit.actions.js":"18"},{"size":3521,"mtime":1608178307100,"results":"19","hashOfConfig":"20"},{"size":4299,"mtime":1608178718848,"results":"21","hashOfConfig":"20"},{"size":2679,"mtime":1608177749895,"results":"22","hashOfConfig":"20"},{"size":2244,"mtime":1608142929871,"results":"23","hashOfConfig":"20"},{"size":909,"mtime":1608155433700,"results":"24","hashOfConfig":"20"},{"size":166,"mtime":1608063618034,"results":"25","hashOfConfig":"20"},{"size":766,"mtime":1608064879885,"results":"26","hashOfConfig":"20"},{"size":263,"mtime":1608063986577,"results":"27","hashOfConfig":"20"},{"size":522,"mtime":1608153682522,"results":"28","hashOfConfig":"20"},{"size":296,"mtime":1608140169573,"results":"29","hashOfConfig":"20"},{"size":735,"mtime":1608064926928,"results":"30","hashOfConfig":"20"},{"size":278,"mtime":1608064982005,"results":"31","hashOfConfig":"20"},{"size":1813,"mtime":1608178732396,"results":"32","hashOfConfig":"20"},{"size":1460,"mtime":1608145666901,"results":"33","hashOfConfig":"20"},{"size":2058,"mtime":1607807240620,"results":"34","hashOfConfig":"20"},{"size":2345,"mtime":1608178373180,"results":"35","hashOfConfig":"20"},{"size":286,"mtime":1608176760574,"results":"36","hashOfConfig":"20"},{"size":416,"mtime":1608159881411,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1enqazd",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Post.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/PostContainer.js",["77","78"],"import React, { Component } from 'react'\nimport {connect} from 'react-redux'\nimport Post from './Post'\nimport Navbar from './Navbar'\nimport NewPostForm from './NewPostForm'\nimport EditPostForm from './EditPostForm'\nimport {fetchPosts, userPosts, savedPosts} from '../actions/post_actions'\nimport {addLikes} from '../actions/like_actions'\nimport {addToSaved} from '../actions/saved_actions'\nimport {currentUser, logoutUser} from '../actions/auth'\nimport {withRouter} from 'react-router-dom'\nimport {Grid} from 'semantic-ui-react'\n\nclass PostContainer extends Component {\n\n    state = {\n        showForm : false,\n        showEditForm : false\n    }\n\n    componentDidMount(){\n\n        const token = localStorage.getItem('my_app_token')\n    \n        if (!token) {\n          this.props.history.push('/')\n        } else {\n    \n          const reqObj = {\n            method: 'GET',\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          }\n    \n          fetch('http://localhost:3000/current_user', reqObj)\n          .then(resp => resp.json())\n          .then(data => {\n            this.props.currentUser(data)\n          })\n\n          if (window.location.href.split('/')[3] === 'profile') { \n            this.props.userPosts()}\n          else if (window.location.href.split('/')[3] === 'saved') {\n            this.props.savedPosts()}\n          else\n            {this.props.fetchPosts()}\n          \n        }\n       \n      }\n\n      logout = () => {\n        localStorage.removeItem('my_app_token')\n        this.props.logoutUser()\n        this.props.history.push('/')\n    }\n\n\n    showPostForm = () => {\n      { this.state.showForm === false ? \n        this.setState({\n          showForm : true\n      })\n      : this.setState({\n          showForm : false\n      })\n      }\n    }\n\n    showEditForm = () => {\n      { this.state.showEditForm === false ? \n        this.setState({\n          showEditForm : true\n      })\n      : this.setState({\n          showEditForm : false\n      })\n      }\n    }\n\n    showProfile = () => {\n        this.props.history.push('/profile')\n    }\n\n    showFeed = () => {\n        this.props.history.push('/home')\n    }\n\n    showSaved = () => {\n        this.props.history.push('/saved')\n    }\n\n    heading = () => {\n      if (window.location.href.split('/')[3] === 'profile') { \n        return <h2>My Posts</h2>}\n      else if (window.location.href.split('/')[3] === 'saved') {\n        return <h2>Saved Posts</h2>}\n      else {return <span>“NOT ALL THOSE WHO WANDER ARE LOST” ~ J.R.R. TOLKIEN</span>}\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Navbar logout={this.logout} \n                        showPostForm={this.showPostForm}  \n                        showProfile={this.showProfile} \n                        showSaved={this.showSaved} \n                        showFeed={this.showFeed}/>\n                \n                {this.state.showForm === true ? \n                <NewPostForm showPostForm={this.showPostForm}/>\n                : null}\n\n                {this.state.showEditForm === true ? \n                <EditPostForm showEditForm={this.showEditForm}/>\n                : null}\n                \n                <div style={{margin:'30px', textAlign:'center'}}>{this.heading()}</div>\n                \n                <Grid verticalAlign='middle'columns={4}>\n                  <Grid.Row >\n                    {this.props.posts.map (post =>\n                      <Grid.Column style={{border:'solid lightGrey 1px', display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n                          <Post key={post.id} \n                                post={post} \n                                user={post.user} \n                                addLikes={this.props.addLikes} \n                                addToSaved={this.props.addToSaved}\n                                showEditForm={this.showEditForm}/>\n                       </Grid.Column>\n                      )}\n                  </Grid.Row>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, {addToSaved, addLikes, fetchPosts, userPosts, currentUser, logoutUser, savedPosts})(withRouter(PostContainer))","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/post_actions.js",["79"],"const BASE_URL = 'http://localhost:3000'\nconst POST_URL = `${BASE_URL}/posts`\nconst FETCH_POSTS = 'FETCH_POSTS'\nconst NEW_POST_SUCCESS = 'NEW_POST_SUCCESS'\nconst USER_POSTS = 'USER_POSTS'\nconst SAVED_POSTS = 'SAVED_POSTS'\nconst DELETE_POST = 'DELETE_POST'\nconst SEARCH = 'SEARCH'\nconst UPDATED_POST = 'UPDATED_POST'\n\n\nexport const fetchPosts = () => dispatch => {\n    fetch(POST_URL)\n    .then(res => res.json())\n    .then(posts => \n        dispatch({\n        type: FETCH_POSTS,\n        posts\n    })\n    )\n}\n\nexport const new_post_success = (post, user) => dispatch => {\n\n  const newPost = {\n    user_id: post.user_id,\n    image: post.image, \n    location: post.location,\n    caption: post.caption,\n    user: user\n  }\n\n    const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newPost)\n      }\n  \n      fetch(POST_URL, reqObj)\n      .then(resp => resp.json())\n      .then(post => \n        dispatch({\n        type: NEW_POST_SUCCESS,\n        newPost\n      })\n      )\n}\n\nexport const updatePost = (post, user) => (dispatch) => {\n\n  const reqObj = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: post.id,\n        image: post.image,\n        location: post.location,\n        caption: post.caption,\n        user: user\n      })\n    }\n\n    fetch(`${POST_URL}/${post.id}`, reqObj)\n    .then(resp => resp.json())\n    .then(updatedPost => \n      dispatch({\n      type: UPDATED_POST,\n      updatedPost\n    })\n    )\n}\n\nexport const userPosts = () => (dispatch, getState) => {\n  //filter posts published by current user\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n      dispatch({\n      type: USER_POSTS,\n      posts: posts.filter(post => post.user_id === getState().auth.user.id)\n  })\n  )\n}\n\nexport const deletePost = (postId) => dispatch => {\n\n  fetch(`${POST_URL}/${postId}`, {method: 'DELETE'})\n  .then(res => res.json())\n  .then(post => \n        dispatch({\n      type: DELETE_POST,\n      post: post\n  })\n  )\n}\n\nexport const searchPosts = (params) => dispatch => {\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n    dispatch({\n      type: SEARCH,\n      posts: posts.filter(post => post.location.includes(params) || post.caption.includes(params))\n    })\n  )\n}\n\nexport const savedPosts = () => (dispatch, getState) => {\n  // filter posts saved by current user\n  fetch(POST_URL)\n  .then(res => res.json())\n  .then(posts => \n    dispatch({\n      type: SAVED_POSTS,\n      posts: posts.filter(post => post.saveds.some(saved => saved.user_id === getState().auth.user.id))\n    })\n  )\n}","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Navbar.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/post_reducer.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Like.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/like_actions.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/like_reducer.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/root_reducer.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Comment.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/comment_actions.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/comment_reducer.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/NewPostForm.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/App.js",["80"],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/Login.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/components/EditPostForm.js",["81"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport {updatePost} from '../actions/post_actions'\nimport {revert} from '../actions/post_to_edit.actions'\n\nclass EditPostForm extends Component {\n \n    constructor(props){\n    super(props)\n        this.state = {\n        id: '',\n        image: '',\n        location: '',\n        caption: ''\n        }\n    }\n\n\n    componentDidUpdate(prevProps, prevState){\n        if (this.props.post_to_edit && prevState.image === '') {\n            this.setState({\n                id: this.props.post_to_edit.id,\n                image: this.props.post_to_edit.image,\n                location: this.props.post_to_edit.location,\n                caption: this.props.post_to_edit.caption\n            })\n        }\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            id: this.props.post_to_edit.id,\n            [event.target.name] : event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.updatePost(this.state, this.props.auth.user)\n        this.props.revert(this.state)\n        this.setState({\n            id: '',\n            image: '', \n            location: '',\n            caption: ''\n        })\n        this.props.showEditForm()\n    }\n\n    render() {\n        return (\n            <div style={{margin: '10vh'}}>\n                <div style={{padding:50, align: 'center'}}>\n                    <h2>Edit Post</h2>\n                    <form onSubmit={this.handleSubmit}>\n                        <input style={{padding:5}} onChange={this.handleChange} name='image' type='text' placeholder=\"Image\" value={this.state.image}/><br/>\n                        <input style={{padding:5}} onChange={this.handleChange} name='location' type='text' placeholder=\"Location\" value={this.state.location}/><br/>\n                        <input style={{padding:5}} onChange={this.handleChange} name='caption' type='text' placeholder=\"Caption\" value={this.state.caption}/><br/>\n                        <input style={{margin:10}} type='submit' value='submit' />\n                    </form>\n                </div>\n                </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n  post_to_edit: state.post_to_edit,\n  auth: state.auth\n})\n\nexport default connect(mapStateToProps, {updatePost, revert})(EditPostForm)","/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/reducers/post_to_edit_reducer.js",[],"/Users/lauren/Flatiron/final-project/wide-wide-world-fe/src/actions/post_to_edit.actions.js",[],{"ruleId":"82","severity":1,"message":"83","line":61,"column":7,"nodeType":"84","messageId":"85","endLine":68,"endColumn":8},{"ruleId":"82","severity":1,"message":"83","line":72,"column":7,"nodeType":"84","messageId":"85","endLine":79,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":9,"column":7,"nodeType":"88","messageId":"89","endLine":9,"endColumn":19},{"ruleId":null,"fatal":true,"severity":2,"message":"90","line":48,"column":48},{"ruleId":"91","severity":2,"message":"92","line":47,"column":9,"nodeType":"93","messageId":"94","endLine":47,"endColumn":32},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-unused-vars","'UPDATED_POST' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Unterminated regular expression\n\n  46 |         <Route exact path='/profile' component={Profile}/>\n  47 |         <Route exact path='/saved' component={Saved}/>\n> 48 |         <Route exact path='/saved' component={/>\n     |                                                ^\n  49 |         </Switch>\n  50 |       </Router>\n  51 |     </div>","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression"]